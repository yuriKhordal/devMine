---
--- Simple mining script
--- Requirements:
--- - Robot:
---  - chunckloader upgrade
---  - inventory upgrade
---  - generator upgrade
---  - mining tool
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Admin.
--- DateTime: 14.02.2020 15:25
---

---@type SidesAPI
local sides = require("sides")

---@type ComputerAPI
local computer = require("computer")

---@type RobotAPI
local robot = require("robot")

---@type ComponentAPI
local component = require("component")

---@type ThreadAPI
local thread = require("thread")

---@type fun(seconds:number) Allows pausing a script for the specified amount of time. Note that signals will still be processed by event handlers while the sleep is active, i.e. you cannot pull signals that were accumulated during the sleep after it ended, since no signals will remain in the queue (or at least not all of them).
os.sleep = os.sleep

---@type Generator
local generator = component.generator

---@type Chunkloader
local chunkloader = component.chunkloader

---@param level number Energy level needed tha should be achieved.
---@return boolean Returns whether there is something to burn in the generator.
local function ensureSufficientEnergyLevel(level)
    local i = 1
    while computer.energy() < level do
        if generator.count() > 0 then
            os.sleep(2)
        else
            if i > robot.inventorySize() then
                return false
            end
            robot.select(i)
            if not generator.insert(1) then
                i = i + 1
            end
        end
    end
    return true
end

local function digForward()
    while robot.detect() or not robot.forward() do
        robot.swing()
    end
    while robot.detectUp() do
        robot.swingUp()
    end
end

if chunkloader ~= nil then
  chunkloader.setActive(true)
end
while ensureSufficientEnergyLevel(500)
        and ({robot.durability()})[1] ~= nil
        and robot.count(robot.inventorySize()) == 0
do
    for i=1, 3, 1 do
        digForward()
    end
    robot.turnLeft()
    for i=1, 2, 1 do
        robot.turnAround()
        for j=1, 5, 1 do
            digForward()
        end
        for j=1, 5, 1 do
            robot.back()
        end
    end
end
if chunkloader ~= nil then
    chunkloader.setActive(false)
end